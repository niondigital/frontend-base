@use "sass:map";
@use "../functions" as *;
@use "../../../../sass-mq/mq" as *;
@use "../vars" as v;
@use "font-family" as *;
@use "fluid" as *;

@mixin font-style-fluid($name) {
	min-height: 0; /* Fix Safari bug with viewport units in calc() */
	font-family: map-deep-get(v.$font-styles, $name, font-family);

	@include font-family(
		map-deep-get(v.$font-styles, $name, font-family),
		map-deep-get(v.$font-styles, $name, font-weight),
		map-deep-get(v.$font-styles, $name, font-style),
		map-deep-get(v.$font-styles, $name, text-transform),
		map-deep-get(v.$font-styles, $name, letter-spacing)
	);

	line-height: map-deep-get(v.$font-styles, $name, small-line-height);

	@include mq($from: medium) {
		line-height: map-deep-get(v.$font-styles, $name, medium-line-height);
	}

	@include mq($from: large) {
		line-height: map-deep-get(v.$font-styles, $name, large-line-height);
	}

	@if map.has-key($breakpoints, xlarge) {
		@include mq($from: xlarge) {
			line-height: map-deep-get(v.$font-styles, $name, xlarge-line-height);
		}
	}

	// <= 320 - medium
	@include fluid(
		font-size,
		map-deep-get(v.$font-styles, $name, small-font-size),
		map-deep-get(v.$font-styles, $name, medium-font-size),
		320px,
		map.get($breakpoints, medium),
		true,
		false
	);

	// medium - large
	@if map.has-key($breakpoints, xlarge) {
		@include fluid(
			font-size,
			map-deep-get(v.$font-styles, $name, medium-font-size),
			map-deep-get(v.$font-styles, $name, large-font-size),
			map.get($breakpoints, medium),
			map.get($breakpoints, large),
			false,
			false
		);
	} @else {
		@include fluid(
			font-size,
			map-deep-get(v.$font-styles, $name, medium-font-size),
			map-deep-get(v.$font-styles, $name, large-font-size),
			map.get($breakpoints, medium),
			map.get($breakpoints, large),
			false,
			true
		);
	}

	@if map.has-key($breakpoints, xlarge) {
		// large - xlarge
		@include fluid(
			font-size,
			map-deep-get(v.$font-styles, $name, large-font-size),
			map-deep-get(v.$font-styles, $name, xlarge-font-size),
			map.get($breakpoints, large),
			map.get($breakpoints, xlarge),
			false,
			true
		);
	}
}
